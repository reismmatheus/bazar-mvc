@model List<BazarMVC.Repositories.Model.VendasModel>

@{
    ViewBag.Title = "Vendas";
}

<style>
    .w-10px {
        width: 10px;
    }
</style>

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Vendas</h1>
                @if (TempData["MensagemSucesso"] != null)
                {
                    <span>@TempData["MensagemSucesso"]</span>
                }
            </div>
        </div>
    </div>
</div>
<section class="content">
    <div class="container-fluid">
        <!-- Small boxes (Stat box) -->
        <div class="row">
            <div class="col-lg-12 col-6">
                <table class="table" data-sortable id="data-table">
                    <thead>
                        <tr>
                            <th scope="col" class="w-10px"></th>
                            <th scope="col">Comprador</th>
                            <th scope="col">Produtos</th>
                            <th scope="col">Total</th>
                            <th scope="col" class="w-10px"></th>
                            <th scope="col" class="w-10px"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="w-10px">
                                    <a href="@Url.Action("Details", "Usuarios", new { id = item.Id })">
                                        <i class="fa fa-eye" data-toggle="tooltip" title="Visualizar"></i>
                                    </a>
                                </td>
                                <td>@item.Comprador</td>
                                <td>
                                    <a href="#" onclick="VendaDetalhada('@item.Id')" class="btn btn-primary btn-sm">Produtos Comprados</a>
                                </td>
                                <td>@item.ValorTotal.ToString("c2")</td>
                                <td class="w-10px">
                                    <a href="@Url.Action("Edit", "Usuarios", new { id = item.Id })">
                                        <i class="fa fa-edit" data-toggle="tooltip" title="Editar"></i>
                                    </a>
                                </td>
                                <td class="w-10px">
                                    <a href="#" onclick="Excluir(1)">
                                        <i class="fa fa-times text-danger" data-toggle="tooltip" title="Excluir"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>

<!-- Modal -->
<div class="modal fade" id="appModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Lista de Produtos</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                @*<div id="appMsgFormSuccess" class="text-success" style="display:none"><b>Os dados foram registrados com sucesso!</b></div>*@
                <div class="alert alert-success alert-dismissible" id="appModalMsgFormSuccess" style="display:none;">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                    <h5><i class="icon fa fa-check"></i> Os dados foram registrados com sucesso!</h5>
                </div>
                <div class="alert alert-danger alert-dismissible" id="appModalMsgFormError" style="display:none;">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                    <h5><i class="icon fa fa-ban"></i>Ocorreu um erro, favor tente novamente. Caso o erro persista contate o administrador.</h5>
                </div>
                <div id="appModalBody">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="appBtnFechar" data-dismiss="modal">Fechar</button>
                @*<button type="button" class="btn btn-primary" id="appBtnSalvar" onclick="$(this).closest('.modal-content').find('form').submit()">Salvar</button>*@
            </div>
        </div>
    </div>
</div>

<!-- Optional: include a polyfill for ES6 Promises for IE11 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>

<script>
    function Excluir(id) {
        Swal.fire({
            title: 'Excluir',
            text: "Você deseja excluir este comprador",
            icon: 'warning',
            showCancelButton: true,
            cancelButtonColor: '#3085d6',
            cancelButtonText: 'Cancelar',
            confirmButtonColor: '#d33',
            confirmButtonText: 'Excluir'
        }).then((result) => {
            window.location.href = "@Url.Action("Index")";
        })
    }

    $(document).ready(function () {
        $('#data-table').dataTable({
            "language": {
                "paginate": {
                    "previous": "Anterior",
                    "next": "Próximo"
                },
                "lengthMenu": "Mostrando _MENU_ itens por página",
                "zeroRecords": "Nada Encontrado",
                "info": "Página _PAGE_ de _PAGES_",
                "infoEmpty": "Sem itens para visualizar",
                "infoFiltered": "(Filtrado de _MAX_ itens)",
                "search": "Pesquisar"
            }
        });
    });

    var urlBase = "http://" + window.location.host;

    function VendaDetalhada(id) {
        var url = urlBase + '/Vendas/ListarProdutos?Id=' + id;
        Util.AppModal.get(url).always(function () {
            $('#appModal').modal('show', { "width": "75%" });
            $('#appModalHeader').html('ListarProdutos');
        });
    }

    Util = {
        Http: {
            request: function (url, data, type, eResponseDataContainer) {

                if (url == undefined)
                    url = "";

                if (data == undefined)
                    data = {};

                if (type == undefined)
                    type = "GET"

                if (eResponseDataContainer == undefined)
                    eResponseDataContainer = "#appGrid";

                return $.ajax({
                    url: url,
                    data: data,
                    type: type,
                    cache: false,
                    beforeSend: function () {

                        //console.log("Loading requisition...");
                    },
                    success: function (data) {
                        if (eResponseDataContainer) {
                            $(eResponseDataContainer).html(data);
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert("Ocorreu um erro na requisição, por favor tente novamente caso o erro persista, contate o administrador.")
                        //console.log("Falha na requisição. Detalhes: \r\n" + xhr.responseText);
                    },
                    complete: function () {
                        //console.log("Loading requisition completed!");
                    }
                });
            }
        },
        AppAlert: function (selector, message, timeout) {
            $(selector).before(
                '<div id="appAlert" style="display:none" class="alert alert-success alert-dismissible fade in" role="alert" data-alert="alert">'
                    + '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>'
                    + message
                + '</div>'
            );

            $("#appAlert").show(200);

            setTimeout(function () {
                $("#appAlert").alert("close");
            }, timeout);
        },

        AppBox: {
            request: function (url, b) {
                Util.Http.request(url)
                   .done(function () {
                       b = b || 0;
                       //Util.AppBox.Overlay.show("#boxLoginLegado");
                   })
                   .always(function () {
                       //Util.AppBox.Overlay.hide("#boxLoginLegado");
                       if (b != null) {
                           b();
                       }
                   });
            },
            Overlay: {
                show: function (selector) {
                    $(selector).append(
                        '<div class="overlay" style="display:none;">'
                            + '<i class="fa fa-refresh fa-spin"></i>'
                        + '</div>'
                    );

                    $(selector).find(".overlay").show();

                },
                hide: function (selector) {
                    setTimeout(function () {
                        $(selector).find(".overlay").hide();
                    }, 250);

                    setTimeout(function () { $(selector).find(".overlay").remove() }, 1000)

                }
            }
        },

        AppModal: {

            _eResponseDataContainer: "#appModalBody",

            get: function (url) {
                return Util.Http.request(url, {}, "GET", this._eResponseDataContainer);
            },
            post: function (url, data, closeModalIfSuccess) {

                if (closeModalIfSuccess == undefined)
                    closeModalIfSuccess = false;

                this.disableModalButtons(true);

                return Util.Http.request(url, data, "POST", this._eResponseDataContainer)
                    .done(function (data) {

                        var isValid = $(data).find("#FormIsValid").val();

                        if (isValid == "true") {

                            if (!closeModalIfSuccess)
                                $('.appModalForm .form-control:input').val('');

                            $("#appModalMsgFormSuccess").show(250);
                            setTimeout(function () {
                                $("#appModalMsgFormSuccess").hide(250);

                                if (closeModalIfSuccess)
                                    $('#appModal').modal('hide');

                                Util.AppModal.disableModalButtons(false);
                            }, 1500);
                            location.reload();
                        }
                        else if (isValid == "false") {
                            setTimeout(function () {
                                $("#appModalMsgFormError").hide(250);
                                Util.AppModal.disableModalButtons(false);
                            }, 2500);
                        }
                    })
                    .always(function () {
                        $.validator.unobtrusive.parse('#appModalForm');

                        $(".appModalSalvarButton").removeAttr("disabled");
                    });
            },
            disableModalButtons: function (isDisabled) {
                $("#appBtnFechar").prop("disabled", isDisabled);
                $("#appBtnSalvar").prop("disabled", isDisabled);
            }
        }
    }
</script>